package dev.rabauer.langchain4j.spring.jpa.memory.demo.persistence;

import jakarta.persistence.*;

import java.time.LocalDateTime;

/**
 * JPA entity representing a single chat message persisted for a given memory identifier.
 */
@Entity
public class ChatMessageEntity {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    private String memoryId;
    @Column(columnDefinition = "TEXT")
    private String content;
    private LocalDateTime createdAt;

    /**
     * Default constructor required by JPA.
     */
    public ChatMessageEntity() {
    }

    /**
     * The autogenerated primary key of the message.
     *
     * @return the database identifier
     */
    public Long getId() {
        return id;
    }

    /**
     * Sets the primary key of the message.
     *
     * @param id the database identifier
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * The memory identifier to which this message belongs.
     *
     * @return the memory id as string
     */
    public String getMemoryId() {
        return memoryId;
    }

    /**
     * Sets the memory identifier for this message.
     *
     * @param memoryId the memory id as string
     */
    public void setMemoryId(String memoryId) {
        this.memoryId = memoryId;
    }

    /**
     * The serialized content of the message (JSON).
     *
     * @return the message content
     */
    public String getContent() {
        return content;
    }

    /**
     * Sets the serialized content of the message (JSON).
     *
     * @param content the message content
     */
    public void setContent(String content) {
        this.content = content;
    }

    /**
     * The timestamp when the message was created/persisted.
     *
     * @return the creation time
     */
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Sets the timestamp when the message was created/persisted.
     *
     * @param createdAt the creation time
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }
}
